//file:noinspection ForeignDelegate
plugins {
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
    id 'fabric-loom' version "${fabric_loom_version}"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    mavenCentral()

    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
        name "Sonatype OSS"
    }

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    // Mod APIs
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "maven.modrinth:ledger:${mod_ledger_version}"

    // Luckperm API
    compileOnly "net.luckperms:api:${mod_luckperm_version}"

    // Included APIs
    modImplementation include("me.lucko:fabric-permissions-api:${mod_fabric_permissions_version}")

    // FastJSON
    implementation include("com.alibaba.fastjson2:fastjson2:${lib_fastjson2_version}")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
def javaVersion = JavaVersion.toVersion(targetJavaVersion)

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

compileKotlin {
    kotlinOptions.jvmTarget = targetJavaVersion.toString()
}

java {
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archives_base_name}" }
    }
}
